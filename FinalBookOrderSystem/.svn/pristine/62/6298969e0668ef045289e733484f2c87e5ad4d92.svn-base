package dataLayer;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.table.AbstractTableModel;

public class DatabaseTableModel extends AbstractTableModel {
	private Vector<String> columnNames;
	private Vector<Object> data;
	private static final long serialVersionUID = 1L;

	public DatabaseTableModel(ResultSet rs) {
		columnNames = new Vector<String>();
		data = new Vector<Object>();
		setResultSet(rs);
	}

	public void setResultSet(ResultSet rs) {
		try {
			ResultSetMetaData rsMetaData = rs.getMetaData();
			int columns = rsMetaData.getColumnCount();
			for (int i = 1; i <= columns; i++) {
				columnNames.addElement(rsMetaData.getColumnName(i));
			}
			while (rs.next()) {
				Vector<Object> row = new Vector<Object>(columns);
				for (int i = 1; i <= columns; i++) {
					row.addElement(rs.getObject(i));
				}
				data.addElement(row);
			}

		} catch (SQLException e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
			System.exit(-1);
		}
	}

	public int getRowCount() {
		if (data == null)
			return 0;
		else
			return data.size();
	}

	public int getColumnCount() {
		if (columnNames == null)
			return 0;
		else
			return columnNames.size();
	}

	public Object getValueAt(int rowIndex, int columnIndex) {
		Vector<Object> temp = (Vector<Object>) data.elementAt(rowIndex);
		return temp.elementAt(columnIndex);
	}

	public String getColumnName(int column) {
		if (column < 0 || column > columnNames.size())
			return "No name";
		else if (columnNames.elementAt(column) == null)
			return "No name";
		else
			return columnNames.elementAt(column);
	}
}
